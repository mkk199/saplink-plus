<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZSAPLINK_UTILS" VERSION="1" LANGU="E" DESCRIPT="SAPlink Utils" UUID="DFE3E74E9883BEF185D0F0DEF1017879" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="701" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <publicSection>class ZSAPLINK_UTILS definition
  public
  final
  create public .

*&quot;* public components of class ZSAPLINK_UTILS
*&quot;* do not include other source files here!!!
public section.

  constants CHAR_SET_US_ASCII type STRING value &apos;US-ASCII&apos;. &quot;#EC NOTEXT
  constants CHAR_SET_UTF_16 type STRING value &apos;UTF-16&apos;. &quot;#EC NOTEXT
  constants CHAR_SET_UTF_8 type STRING value &apos;UTF-8&apos;. &quot;#EC NOTEXT
  constants CHAR_SET_ISO_8859_1 type STRING value &apos;ISO-8859-1&apos;. &quot;#EC NOTEXT
  constants CHAR_SET_WINDOWS_1251 type STRING value &apos;WINDOWS-1251&apos;. &quot;#EC NOTEXT
  constants PRESERVE_SPACE_ELEMENT type STRING value &apos;preserve&apos;. &quot;#EC NOTEXT
  constants STRIP_SPACE_ELEMENT type STRING value &apos;strip&apos;. &quot;#EC NOTEXT

  methods LOAD_IXML_DOC_FROM_FILE
    importing
      value(IV_FILE_NAME) type STRING
      !IV_SET_VALIDATING type I optional
      !IV_SPACE_ELEMENT type STRING default &apos;&apos;
    returning
      value(RO_IXML_DOC) type ref to IF_IXML_DOCUMENT
    raising
      ZCX_SAPLINK .
  type-pools ABAP .
  methods SAVE_IXML_DOC_TO_FILE
    importing
      !IO_IXML_DOC type ref to IF_IXML_DOCUMENT
      value(IV_FILE_NAME) type STRING
      value(IV_CHARACTER_SET) type STRING default CHAR_SET_UTF_16
      value(IV_BYTE_ORDER) type I default IF_IXML_ENCODING=&gt;CO_NONE
      value(IV_PRETTY_PRINT) type ABAP_BOOL default &apos;X&apos;
    preferred parameter IV_BYTE_ORDER
    returning
      value(RV_BYTES_WRITTEN) type I
    raising
      ZCX_SAPLINK .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_EVP_XML_UTILS
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZSAPLINK_UTILS
*&quot;* do not include other source files here!!!
private section.

  class ZCX_SAPLINK definition load .
  methods RAISE_EXCEPTION
    importing
      !IV_TEXTID type SOTR_CONC optional
      !IV_MSG type CSEQUENCE optional
      !IT_ERROR_MESSAGES type ZCX_SAPLINK=&gt;TT_ERROR_MESSAGE optional
      !IV_SUBRC type SYSUBRC optional
    raising
      ZCX_SAPLINK .</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <localTestClasses>* ----------------------------------------------------------------------
CLASS abap_unit_testclass DEFINITION FOR TESTING FINAL  &quot;#AU Duration Medium
  &quot;#AU Risk_Level Harmless
.
* ----------------------------------------------------------------------
* ================
  PRIVATE SECTION.
* ================
    DATA:
      m_ref TYPE REF TO zsaplink_utils.                     &quot;#EC NOTEXT
    DATA go_err TYPE REF TO zcx_saplink.
    DATA gv_txt TYPE string.

    METHODS: setup.
    METHODS: teardown.
    METHODS: load_ixml_doc_from_file FOR TESTING.
    METHODS: save_ixml_doc_to_file FOR TESTING.
ENDCLASS.       &quot;Abap_Unit_Testclass
* ----------------------------------------------------------------------
CLASS abap_unit_testclass IMPLEMENTATION.
* ----------------------------------------------------------------------

* ----------------------------------------------------------------------
  METHOD setup.
* ----------------------------------------------------------------------

    CREATE OBJECT m_ref.
  ENDMETHOD.       &quot;Setup

* ----------------------------------------------------------------------
  METHOD teardown.
* ----------------------------------------------------------------------


  ENDMETHOD.       &quot;Teardown

* ----------------------------------------------------------------------
  METHOD load_ixml_doc_from_file.
* ----------------------------------------------------------------------
    DATA iv_file_name TYPE string.
    DATA iv_character_set TYPE string.
    DATA iv_byte_order TYPE i.
    DATA iv_set_validating TYPE i.
    DATA ro_ixml_doc TYPE REF TO if_ixml_document.

                                                            &quot; Test #01
    TRY.
        ro_ixml_doc = m_ref-&gt;load_ixml_doc_from_file(
            iv_file_name = iv_file_name
*         IV_CHARACTER_SET = Iv_Character_Set
*         IV_BYTE_ORDER = Iv_Byte_Order
*         IV_SET_VALIDATING = Iv_Set_Validating
        ).

        cl_aunit_assert=&gt;fail( &apos;Should have failed&apos; ).
      CATCH zcx_saplink INTO go_err.
        gv_txt = go_err-&gt;get_text( ).
        cl_aunit_assert=&gt;assert_equals(
          act   = gv_txt
          exp   = &apos;No filename is specified&apos;
          msg   = &apos;Testing value error msg&apos;
        ).
    ENDTRY.
  ENDMETHOD.       &quot;Load_Ixml_Doc_From_File

* ----------------------------------------------------------------------
  METHOD save_ixml_doc_to_file.
* ----------------------------------------------------------------------
    DATA io_ixml_doc TYPE REF TO if_ixml_document.
    DATA iv_file_name TYPE string.
    DATA iv_character_set TYPE string.
    DATA iv_byte_order TYPE i.
    DATA iv_pretty_print TYPE abap_bool.
    DATA rv_bytes_written TYPE i.

                                                            &quot; Test #01
    TRY.
        rv_bytes_written = m_ref-&gt;save_ixml_doc_to_file(
            io_ixml_doc = io_ixml_doc
            iv_file_name = iv_file_name
*         IV_CHARACTER_SET = Iv_Character_Set
*         IV_BYTE_ORDER = Iv_Byte_Order
*         IV_PRETTY_PRINT = Iv_Pretty_Print
        ).
        cl_aunit_assert=&gt;fail( &apos;Should have failed&apos; ).
      CATCH zcx_saplink INTO go_err.
        gv_txt = go_err-&gt;get_text( ).
        cl_aunit_assert=&gt;assert_equals(
          act   = gv_txt
          exp   = &apos;XML document object is not bound&apos;
          msg   = &apos;Testing value error msg&apos;
        ).
    ENDTRY.
  ENDMETHOD.       &quot;Save_Ixml_Doc_To_File


ENDCLASS.       &quot;Abap_Unit_Testclass</localTestClasses>
 <textPool>
  <language SPRAS="E">
   <textElement ID="I" KEY="T01" ENTRY="No file name specified" LENGTH="22 "/>
   <textElement ID="I" KEY="T02" ENTRY="GUI_UPLOAD failed" LENGTH="17 "/>
   <textElement ID="I" KEY="T03" ENTRY="XML parser errors" LENGTH="17 "/>
   <textElement ID="I" KEY="T04" ENTRY="XML Document not bound" LENGTH="22 "/>
   <textElement ID="I" KEY="T05" ENTRY="XML Renderer failed" LENGTH="19 "/>
   <textElement ID="I" KEY="T06" ENTRY="GUI_DOWNLOAD failed" LENGTH="19 "/>
  </language>
 </textPool>
 <typeUsage CLSNAME="ZSAPLINK_UTILS" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
 <forwardDeclaration>ABAP</forwardDeclaration>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="CHAR_SET_ISO_8859_1" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;ISO-8859-1&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="CHAR_SET_US_ASCII" VERSION="1" LANGU="E" DESCRIPT="US-ASCII" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;US-ASCII&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="CHAR_SET_UTF_16" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;UTF-16&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="CHAR_SET_UTF_8" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;UTF-8&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="CHAR_SET_WINDOWS_1251" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;WINDOWS-1251&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="PRESERVE_SPACE_ELEMENT" VERSION="1" LANGU="E" DESCRIPT="Preserve Space Element" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;preserve&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZSAPLINK_UTILS" CMPNAME="STRIP_SPACE_ELEMENT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" ATTDECLTYP="2" ATTVALUE="&apos;strip&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <method CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" VERSION="1" LANGU="E" DESCRIPT="Loads iXML document from a file" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" SCONAME="IV_FILE_NAME" VERSION="1" LANGU="E" DESCRIPT="File name" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" SCONAME="IV_SET_VALIDATING" VERSION="1" LANGU="E" DESCRIPT="Set validating. E.g. if_ixml_parser=&gt;co_validate" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" SCONAME="IV_SPACE_ELEMENT" VERSION="1" LANGU="E" DESCRIPT="Preserve or strip the space element" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PARVALUE="&apos;&apos;" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" SCONAME="RO_IXML_DOC" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <exception CLSNAME="ZSAPLINK_UTILS" CMPNAME="LOAD_IXML_DOC_FROM_FILE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDON="00000000"/>
  <source>METHOD load_ixml_doc_from_file.
*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
  DATA lo_ixml_stream_factory TYPE REF TO if_ixml_stream_factory.
  DATA lo_input_stream TYPE REF TO if_ixml_istream.
  DATA lo_ixml TYPE REF TO if_ixml.
  DATA lo_parser TYPE REF TO if_ixml_parser.
  DATA lv_rc TYPE i.
  DATA lt_xml TYPE dcxmllines.
  DATA lv_size TYPE i.
  DATA lv_num_errors TYPE i.
  DATA lv_index TYPE i.
  DATA lo_parser_error TYPE REF TO if_ixml_parse_error.
  DATA lv_line TYPE string.
  DATA lv_col TYPE string.
  DATA lv_reason TYPE string.
  DATA ls_error_message TYPE zcx_saplink=&gt;ts_error_message.
  DATA lt_error_message TYPE zcx_saplink=&gt;tt_error_message.

  IF iv_file_name IS INITIAL.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;No file name specified&apos;(t01)
    ).
  ENDIF.

  CALL METHOD cl_gui_frontend_services=&gt;gui_upload
    EXPORTING
      filename                = iv_file_name
      filetype                = &apos;BIN&apos;
    IMPORTING
      filelength              = lv_size
    CHANGING
      data_tab                = lt_xml
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      not_supported_by_gui    = 17
      error_no_gui            = 18
      OTHERS                  = 19.

  lv_rc = sy-subrc.
  IF lv_rc &lt;&gt; 0.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;GUI_UPLOAD failed&apos;(t02)
      iv_subrc = lv_rc
    ).
  ENDIF.

  lo_ixml = cl_ixml=&gt;create( ).

  lo_ixml_stream_factory = lo_ixml-&gt;create_stream_factory( ).

  lo_input_stream = lo_ixml_stream_factory-&gt;create_istream_itable(
    table = lt_xml
    size = lv_size
  ).

  ro_ixml_doc = lo_ixml-&gt;create_document( ).

  lo_parser = lo_ixml-&gt;create_parser(
    stream_factory = lo_ixml_stream_factory
    istream = lo_input_stream
    document = ro_ixml_doc
  ).

  IF iv_set_validating IS SUPPLIED.
    lo_parser-&gt;set_validating( mode = if_ixml_parser=&gt;co_validate ).
  ENDIF.

  &quot; From https://cw.sdn.sap.com/cw/docs/DOC-37342
*  A text node is preserved if any of the following apply: -
*  The element name of the parent of the text node is in the
*  set of whitespace preserving element names. -
*  The text node contains at least one non-whitespace charter.
*  As in XML, a whitespace charter is #x20, #x9, #xD or #xA. -
*  An anchestor element of the text node has an xml:space
*  attribute with a value of preserve, and no closer ancestor
*  element has xml:space with a value of default.
*  Otherwise, the text node is stripped.
  CASE iv_space_element.
    WHEN preserve_space_element.
      lo_parser-&gt;add_preserve_space_element( ).
    WHEN strip_space_element.
      lo_parser-&gt;add_strip_space_element( ).
  ENDCASE.

  lv_rc = lo_parser-&gt;parse( ).

  lo_input_stream-&gt;close( ).

  IF lv_rc &lt;&gt; 0.
    lv_num_errors = lo_parser-&gt;num_errors( ).
    DO lv_num_errors TIMES.
      lv_index = sy-index - 1.
      lo_parser_error = lo_parser-&gt;get_error( index = lv_index ).

      lv_line = lo_parser_error-&gt;get_line( ).
      lv_col = lo_parser_error-&gt;get_column( ).
      lv_reason = lo_parser_error-&gt;get_reason( ).

      CONCATENATE
        lv_line
        lv_col
        lv_reason
      INTO ls_error_message-message.

      APPEND ls_error_message TO lt_error_message.
    ENDDO.

    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;XML parser errors&apos;(t03)
      iv_subrc = lv_rc
      it_error_messages = lt_error_message
    ).
  ENDIF.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" VERSION="1" LANGU="E" DESCRIPT="Raises ZCX_SAPLINK exception" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" SCONAME="IV_TEXTID" VERSION="1" LANGU="E" DESCRIPT="Text ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SOTR_CONC" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" SCONAME="IV_MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CSEQUENCE" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" SCONAME="IT_ERROR_MESSAGES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCX_SAPLINK=&gt;TT_ERROR_MESSAGE" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" SCONAME="IV_SUBRC" VERSION="1" LANGU="E" DESCRIPT="Return Value of ABAP Statements" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYSUBRC" PAROPTIONL="X"/>
  <exception CLSNAME="ZSAPLINK_UTILS" CMPNAME="RAISE_EXCEPTION" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" DESCRIPT="SAPlink exception class" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDON="00000000"/>
  <source>METHOD raise_exception.
*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
  RAISE EXCEPTION TYPE zcx_saplink
  EXPORTING
    textid = iv_textid
    msg = iv_msg
    subrc = iv_subrc
    error_messages = it_error_messages.
ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" VERSION="1" LANGU="E" DESCRIPT="Saves iXML document to a file" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="IO_IXML_DOC" VERSION="1" LANGU="E" DESCRIPT="IF_IXML_DOCUMENT" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_DOCUMENT"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="IV_FILE_NAME" VERSION="1" LANGU="E" DESCRIPT="File name" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="IV_CHARACTER_SET" VERSION="1" LANGU="E" DESCRIPT="Character set: e.g. UTF-16" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING" PARVALUE="CHAR_SET_UTF_16" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="IV_BYTE_ORDER" VERSION="1" LANGU="E" DESCRIPT="Byte Order: e.g. little or big endian" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="I" PARVALUE="IF_IXML_ENCODING=&gt;CO_NONE" PAROPTIONL="X" PARPREFERD="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="IV_PRETTY_PRINT" VERSION="1" LANGU="E" DESCRIPT="Pritty print XML: indent the elements" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="&apos;X&apos;" PAROPTIONL="X"/>
  <parameter CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="RV_BYTES_WRITTEN" VERSION="1" LANGU="E" DESCRIPT="Number of bytes written" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDBY="BCUSER" CHANGEDON="20101030" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
  <exception CLSNAME="ZSAPLINK_UTILS" CMPNAME="SAVE_IXML_DOC_TO_FILE" SCONAME="ZCX_SAPLINK" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20101030" CHANGEDON="00000000"/>
  <source>METHOD save_ixml_doc_to_file.
*/---------------------------------------------------------------------\
*|   This file is part of SAPlink.                                     |
*|                                                                     |
*|   SAPlink is free software; you can redistribute it and/or modify   |
*|   it under the terms of the GNU General Public License as published |
*|   by the Free Software Foundation; either version 2 of the License, |
*|   or (at your option) any later version.                            |
*|                                                                     |
*|   SAPlink is distributed in the hope that it will be useful,        |
*|   but WITHOUT ANY WARRANTY; without even the implied warranty of    |
*|   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     |
*|   GNU General Public License for more details.                      |
*|                                                                     |
*|   You should have received a copy of the GNU General Public License |
*|   along with SAPlink; if not, write to the                          |
*|   Free Software Foundation, Inc.,                                   |
*|   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA          |
*\---------------------------------------------------------------------/
  DATA lo_ixml TYPE REF TO if_ixml.
  DATA lo_ixml_stream_factory TYPE REF TO if_ixml_stream_factory.
  DATA lo_output_stream TYPE REF TO if_ixml_ostream.
  DATA lo_encoding TYPE REF TO if_ixml_encoding.
  DATA lt_xml TYPE dcxmllines.
  DATA lo_renderer TYPE REF TO if_ixml_renderer.
  DATA lv_rc TYPE i.
  DATA lv_size TYPE i.

  IF io_ixml_doc IS NOT BOUND.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;XML Document not bound&apos;(t04)
    ).
  ENDIF.

  IF iv_file_name IS INITIAL.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;No file name specified&apos;(t01)
    ).
  ENDIF.

  lo_ixml = cl_ixml=&gt;create( ).

  lo_encoding = lo_ixml-&gt;create_encoding(
    character_set = iv_character_set
    byte_order = iv_byte_order
  ).

  lo_ixml_stream_factory = lo_ixml-&gt;create_stream_factory( ).

  lo_output_stream = lo_ixml_stream_factory-&gt;create_ostream_itable( lt_xml ).

  lo_output_stream-&gt;set_encoding( encoding = lo_encoding ).
  lo_output_stream-&gt;set_pretty_print( pretty_print = iv_pretty_print ).

  lo_renderer = lo_ixml-&gt;create_renderer(
    ostream  = lo_output_stream
    document = io_ixml_doc
  ).

  lv_rc = lo_renderer-&gt;render( ).

  lv_size = lo_output_stream-&gt;get_num_written_raw( ).

  lo_output_stream-&gt;close( ).

  IF lv_rc &lt;&gt; 0.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;XML Renderer failed&apos;(t05)
      iv_subrc = lv_rc
    ).
  ENDIF.

  CALL METHOD cl_gui_frontend_services=&gt;gui_download
    EXPORTING
      bin_filesize            = lv_size
      filename                = iv_file_name
      filetype                = &apos;BIN&apos;
    CHANGING
      data_tab                = lt_xml
    EXCEPTIONS
      file_write_error        = 1
      no_batch                = 2
      gui_refuse_filetransfer = 3
      invalid_type            = 4
      no_authority            = 5
      unknown_error           = 6
      header_not_allowed      = 7
      separator_not_allowed   = 8
      filesize_not_allowed    = 9
      header_too_long         = 10
      dp_error_create         = 11
      dp_error_send           = 12
      dp_error_write          = 13
      unknown_dp_error        = 14
      access_denied           = 15
      dp_out_of_memory        = 16
      disk_full               = 17
      dp_timeout              = 18
      file_not_found          = 19
      dataprovider_exception  = 20
      control_flush_error     = 21
      not_supported_by_gui    = 22
      error_no_gui            = 23
      OTHERS                  = 24.

  lv_rc = sy-subrc.

  IF lv_rc &lt;&gt; 0.
    raise_exception(
      iv_textid = zcx_saplink=&gt;error_message
      iv_msg = &apos;GUI_DOWNLOAD failed&apos;(t06)
      iv_subrc = lv_rc
    ).
  ENDIF.

  rv_bytes_written = lv_size.
ENDMETHOD.</source>
 </method>
</CLAS>
